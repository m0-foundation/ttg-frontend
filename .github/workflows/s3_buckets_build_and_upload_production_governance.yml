# Build app and upload to S3 bucket
name: build_and_upload_to_s3_production_governance

on:
  # This workflow is only working via workflow call
  workflow_call:

jobs:
  build-and-upload-to-s3-production-governance:
    runs-on: 'ubuntu-20.04'
    environment: PRODUCTION
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
    # Defining the variables that have to be read and set from the GitHub variables/secrets
    env:
      BUILD_ENV: ${{ vars.BUILD_ENV }}
      VITE_APP_RPC_URL_MAIN: ${{ secrets.VITE_APP_RPC_URL_MAIN }}
      VITE_APP_RPC_URL_FALLBACK: ${{ secrets.VITE_APP_RPC_URL_FALLBACK }}
      VITE_APP_IS_AUCTION_ACTIVE: ${{ secrets.VITE_APP_IS_AUCTION_ACTIVE }}
      VITE_APP_WALLET_CONNECT_PROJECT_ID: ${{ secrets.VITE_APP_WALLET_CONNECT_PROJECT_ID }}
    steps:

      # Checking out the GitHub repository on the runner
    - name: Checkout
      uses: 'actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608'

      # Installing Node v20
    - name: Install Node v20
      uses: 'actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8'
      with:
        node-version: 20

    # Building the app to upload to S3 buckets
    - name: Build
      run: |
        wget "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" -P skipcache
        yarn install
        yarn build

    # Logging into AWS
    - name: Setup AWS CLI
      uses: 'aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502'
      with:
        aws-access-key-id: ${{ secrets.M0_PRODUCTION_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.M0_PRODUCTION_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    # Invalidating CloudFront cache
    - name: Invalidate CloudFront Cache before upload
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/*"

    # Uploading files to S3 bucket
    - name: Sync files to S3 bucket
      run: |
        aws s3 sync ./.output/public s3://${{ secrets.S3_BUCKET }} --delete
